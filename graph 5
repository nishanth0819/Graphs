#include<iostream>
#include<vector>
#include<queue>
using namespace std;
void dfsr(int i,vector<int> adj[],vector<int> &res,vector<int> &vis)
{
    res.push_back(i);
    vis[i]=1;
    for(int it:adj[i])
    {
        if(!vis[it])
        {
            dfsr(it,adj,res,vis);
        }
    }
}
void dfs(vector<int> adj[],int n)
{
    vector<int> res;
    vector<int> vis(n+1,0);
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
          dfsr(i,adj,res,vis);
    }
    for(int i=0;i<res.size();i++)
    {
        cout<<res[i]<<" ";
    }
}
int main()
{
    int n,m;
    cin>>n>>m;
    vector<int> adj[n+1];
    for(int i=0;i<m;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    dfs(adj,n);
    return 0;
}
