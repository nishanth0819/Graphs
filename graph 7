#include<iostream>
#include<vector>
#include<queue>
using namespace std;
bool check(int i,vector<int> adj[],vector<int> &vis)
{
    queue<pair<int,int>> q;
    vis[i]=1;
    q.push({i,-1});
    while(q.empty()==false)
    {
        int node=q.front().first;
        int par=q.front().second;
        q.pop();
        for(int j:adj[node])
        {
            if(!vis[j])
            {
                q.push({j,node});
                vis[j]=1;
            }
            else if(par!=j)
                return true;
        }
    }
    return false;
}
bool iscyclye(vector<int> adj[],int n)
{
    vector<int> vis(n+1,0);
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
           if(check(i,adj,vis))
               return true;
    }
    return false;
}
int main()
{
    int n,m;
    cin>>n>>m;
    vector<int> adj[n+1];
    for(int i=0;i<m;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    cout<<iscyclye(adj,n);
    return 0;
}
